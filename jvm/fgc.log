Java HotSpot(TM) 64-Bit Server VM (25.221-b11) for windows-amd64 JRE (1.8.0_221-b11), built on Jul  4 2019 04:39:29 by "java_re" with MS VC++ 10.0 (VS2010)
Memory: 4k page, physical 8336688k(2303700k free), swap 13579568k(2941332k free)
CommandLine flags: -XX:InitialHeapSize=20971520 -XX:MaxHeapSize=20971520 -XX:MaxNewSize=10485760 -XX:MaxTenuringThreshold=15 -XX:NewSize=10485760 -XX:OldPLABSize=16 -XX:PretenureSizeThreshold=3145728 -XX:+PrintGC -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:SurvivorRatio=8 -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:-UseLargePagesIndividualAllocation -XX:+UseParNewGC 
0.099: [GC (Allocation Failure) 0.099: [ParNew (promotion failed): 8131K->8784K(9216K), 0.0026505 secs]0.102: [CMS: 8194K->6750K(10240K), 0.0031392 secs] 12227K->6750K(19456K), [Metaspace: 3173K->3173K(1056768K)], 0.0061009 secs] [Times: user=0.00 sys=0.00, real=0.01 secs] 
# [CMS: 8194K->6750K(10240K), 0.0031392 secs] 这里触发Full GC时原始占用8MB包含大对象直接晋升的4MB+2个2MB数组，在继续存放128KB的数组时空间不足触发Full GC

Heap
 par new generation   total 9216K, used 2505K [0x00000000fec00000, 0x00000000ff600000, 0x00000000ff600000)
  eden space 8192K,  30% used [0x00000000fec00000, 0x00000000fee726f0, 0x00000000ff400000)
  from space 1024K,   0% used [0x00000000ff500000, 0x00000000ff500000, 0x00000000ff600000)
  to   space 1024K,   0% used [0x00000000ff400000, 0x00000000ff400000, 0x00000000ff500000)
 concurrent mark-sweep generation total 10240K, used 6750K [0x00000000ff600000, 0x0000000100000000, 0x0000000100000000)
 Metaspace       used 3195K, capacity 4496K, committed 4864K, reserved 1056768K
  class space    used 345K, capacity 388K, committed 512K, reserved 1048576K
